[{"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\index.tsx":"1","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\App.tsx":"3","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Login.tsx":"4","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Home.tsx":"5","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Register.tsx":"6","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\NotFound.tsx":"7","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\redux\\store.ts":"8","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Dashboard.tsx":"9","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\api\\axiosInstance.ts":"10","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\api\\todosApi.ts":"11","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\Todo.tsx":"12","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\TaskList.tsx":"13","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\Check.tsx":"14","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\Navbar.tsx":"15","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\types\\Todo.ts":"16","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\redux\\slices\\todoSlice.ts":"17","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\AddTask.tsx":"18","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\AddTodo.tsx":"19"},{"size":476,"mtime":1686352792938,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1685721457012,"results":"22","hashOfConfig":"21"},{"size":665,"mtime":1686570922447,"results":"23","hashOfConfig":"21"},{"size":3548,"mtime":1686491928726,"results":"24","hashOfConfig":"21"},{"size":110,"mtime":1685979052210,"results":"25","hashOfConfig":"21"},{"size":2228,"mtime":1685980829412,"results":"26","hashOfConfig":"21"},{"size":1684,"mtime":1686511997962,"results":"27","hashOfConfig":"21"},{"size":595,"mtime":1686436059877,"results":"28","hashOfConfig":"21"},{"size":3733,"mtime":1686570846342,"results":"29","hashOfConfig":"21"},{"size":393,"mtime":1686253486048,"results":"30","hashOfConfig":"21"},{"size":2271,"mtime":1686573588500,"results":"31","hashOfConfig":"21"},{"size":4724,"mtime":1686571332083,"results":"32","hashOfConfig":"21"},{"size":4292,"mtime":1686573613274,"results":"33","hashOfConfig":"21"},{"size":1422,"mtime":1686575239813,"results":"34","hashOfConfig":"21"},{"size":2529,"mtime":1686581820587,"results":"35","hashOfConfig":"21"},{"size":172,"mtime":1686315762229,"results":"36","hashOfConfig":"21"},{"size":2844,"mtime":1686574390396,"results":"37","hashOfConfig":"21"},{"size":4348,"mtime":1686573606052,"results":"38","hashOfConfig":"21"},{"size":4426,"mtime":1686575100816,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"12y8vl4",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\index.tsx",[],[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\App.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Login.tsx",["102","103","104","105","106"],[],"import React from \"react\";\r\nimport \"../index.css\"\r\nimport {useState, useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { InternalAxiosRequestConfig } from \"axios\";\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport instance from \"../api/axiosInstance\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\nconst [error, setError] = useState(false);\r\nconst [loading, setLoading] = useState(false);\r\nconst [success, setSuccess] = useState(false);\r\n\r\n\r\n\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async(e: any) => {\r\n   \r\n    if (!user.email || !user.password) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n\r\n      setLoading(true);\r\n     \r\n      await instance.post(\"/login\",(user)\r\n      ).then((res) => {\r\n     \r\n        setLoading(false);   \r\n       if (res.data) {\r\n        console.log(res.data)\r\n        setSuccess(true);\r\n        const token = res.data.token;\r\n         localStorage.setItem(\"token\",token)\r\n      \r\n      \r\n       }\r\n      } );\r\n\r\n        \r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n      setError(true);\r\n\r\n    }\r\n\r\n     \r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (success || localStorage.getItem('token')) {\r\n      navigate('/dashboard');\r\n    }\r\n\r\n  }\r\n  ,[success,navigate]);\r\n\r\n  \r\n  return (\r\n    <>\r\n    \r\n    {loading && (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <SyncLoader color=\"#3B82F6\" />\r\n      </div>\r\n    )\r\n    }\r\n   \r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"max-w-md w-full px-6 py-8 bg-white shadow-lg rounded-lg\">\r\n        <h1 className=\"text-3xl font-semibold text-center mb-6\">Login</h1>\r\n    \r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\" onChange={handleChange}\r\n              value={user.email}\r\n              name = \"email\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter your password\" onChange={handleChange}\r\n              value={user.password}\r\n              name = \"password\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            \r\n            <input type = \"button\" className = \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n              value = \"Login\" onClick={handleSubmit}\r\n            />\r\n\r\n\r\n            \r\n\r\n        \r\n           \r\n          </div>\r\n       \r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Home.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Register.tsx",["107"],[],"import React from \"react\";\r\nimport \"../index.css\"\r\n\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <div className=\"max-w-md w-full px-6 py-8 bg-white shadow-lg rounded-lg\">\r\n        <h1 className=\"text-3xl font-semibold text-center mb-6\">Register</h1>\r\n        <form>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\r\n              Name\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              placeholder=\"Enter your name\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:border-blue-500\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter your password\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            <button className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\r\n              Register\r\n            </button>\r\n            <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"#\">\r\n              Already have an account?\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\NotFound.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\redux\\store.ts",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\pages\\Dashboard.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\api\\axiosInstance.ts",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\api\\todosApi.ts",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\Todo.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\TaskList.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\Check.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\Navbar.tsx",["108","109"],[],"\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport instance from '../api/axiosInstance';\r\nimport logo from '../icons/logo.png';\r\nimport AddTodo from './AddTodo';\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 15px 10%;\r\n  background-color: white;\r\n  border-bottom: 1px solid #e5e5e5;\r\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  margin-right: auto;\r\n  img {\r\n    width: 154px;\r\n    height: 36px;\r\n  }\r\n`;\r\n  \r\n\r\nconst NavLinks = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n`;\r\n\r\nconst NavLink = styled.li`\r\n  padding: 0px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n \r\n  a {\r\n    font-family: 'Montserrat', sans-serif;\r\n    font-weight: 500;\r\n\r\n    text-decoration: none;\r\n    transition: all 0.3s ease 0s;\r\n\r\n    &:hover {\r\n      color: #0088a9;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    window.location.reload();\r\n\r\n  };\r\n\r\n  const [user, setUser] = useState<any>(null);\r\n\r\n\r\n  useEffect(() => {\r\n   \r\n    const fetchUser = async () => {\r\n\r\n       try {\r\n         const res = await instance.get('/profile')\r\n         setUser(res.data.user)\r\n         console.log(res.data.user)\r\n       } catch (error) {\r\n            console.log(error)\r\n\r\n       }\r\n    }\r\n\r\n     fetchUser();\r\n     console.log(user)\r\n\r\n\r\n  }, [\r\n    \r\n  ]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Header>\r\n      <Logo>\r\n        <img src={logo} alt=\"logo\" />\r\n      </Logo>\r\n      <NavLinks>\r\n        {user && user.username ? (\r\n          <>\r\n              <NavLink>\r\n                <AddTodo />\r\n            </NavLink>\r\n            <NavLink >\r\n              <Link to=\"/profile\">{user.username}</Link>\r\n            </NavLink>\r\n            <NavLink >\r\n              <Link to=\"/logout\" onClick={logout}>Çıkış</Link>\r\n            </NavLink>\r\n        \r\n\r\n          </>\r\n        ) : (\r\n          <>\r\n            <NavLink>\r\n              <Link to=\"/login\">Giriş</Link>\r\n            </NavLink>\r\n            <NavLink>\r\n                <Link to=\"/register\">Kayıt</Link>\r\n            </NavLink>\r\n            <NavLink>\r\n                <Link to=\"/profile\">Profil</Link>\r\n            </NavLink>\r\n          </>\r\n        )}\r\n      </NavLinks>\r\n    \r\n      \r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\types\\Todo.ts",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\redux\\slices\\todoSlice.ts",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\AddTask.tsx",[],[],"C:\\Users\\Taha\\Desktop\\MERN-todo-case-project\\frontend\\src\\components\\AddTodo.tsx",["110","111"],[],"import  { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport styled from 'styled-components';\r\nimport { useAddTaskMutationMutation, useCreateTodoMutation } from '../api/todosApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask, addTodo } from '../redux/slices/todoSlice';\r\nimport { Task } from '../types/Task';\r\nimport BarLoader from 'react-spinners/BarLoader';\r\n\r\nconst ModalContainer = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  z-index: 1000;\r\n\r\n\r\n`;\r\n\r\n\r\n\r\nconst ModalTitle = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ModalInput = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 1px solid #888;\r\n  border-radius: 5px;\r\n  padding: 0 10px;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: 500;\r\n`;\r\n\r\n\r\n\r\nconst ModalContent = styled(motion.div)`\r\n  background-color: #fefefe;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n  max-width: 400px;\r\n    position: relative;\r\n    border-radius: 15px;\r\n`;\r\n\r\nconst CloseButton = styled.span`\r\n  color: #aaaaaa;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n\r\n\r\nconst AddTodoButton = styled.div`\r\nwidth:120px;\r\nheight:40px;\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nfont-size:14px;\r\nfont-family: 'Montserrat', sans-serif;\r\nfont-weight: 600;\r\nbackground-color: #AF7EEB;\r\ncolor: #fff;\r\nborder-radius: 15px;\r\n\r\n&:hover {\r\n    cursor: pointer;\r\n    background-color: #9A6EEB;\r\n}\r\n\r\n\r\n`\r\n\r\nconst Modal = ({ isOpen, onClose, children }: any) => {\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <ModalContainer\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n        >\r\n          <ModalContent\r\n            initial={{ y: -100, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n            exit={{ y: -100, opacity: 0 }}\r\n          >\r\n            <CloseButton onClick={onClose}>&times;</CloseButton>\r\n            {children}\r\n          </ModalContent>\r\n          \r\n        </ModalContainer>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\n\r\n\r\ninterface TodoState {\r\n    title: string;\r\n    tasks : Task[];\r\n\r\n    \r\n}\r\n\r\n\r\nconst AddTodo = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\nconst [createTodo, { isLoading }] = useCreateTodoMutation();\r\n\r\n\r\n\r\n  const [newTodo, setNewTodo] = useState<TodoState>({\r\n    title: \"\",\r\n    tasks: [\r\n        {\r\n            text: \"ilk görevim\",\r\n            completed: false,\r\n            _id: \"\",\r\n            todo: \"\",\r\n            createdAt: Date.now().toString(),\r\n\r\n\r\n        }\r\n    ],\r\n\r\n  });\r\n\r\n\r\n\r\n  const changeHandler = (e: any) => {\r\n    setNewTodo({ ...newTodo, [e.target.name]: e.target.value });\r\n\r\n  }\r\n\r\n\r\n  const addNewTodo= async() => {\r\n\r\n    if (newTodo.title === \"\") {\r\n      alert(\"Görev adı boş olamaz!\");\r\n      return;\r\n    }\r\n\r\n\r\n    await createTodo(newTodo)\r\n    .unwrap()\r\n    .then(() => {\r\n      dispatch(addTodo({\r\n          title: newTodo.title,\r\n          tasks: newTodo.tasks,\r\n          _id: \"\",\r\n      }));\r\n      \r\n      handleCloseModal();\r\n    }\r\n\r\n    )\r\n  }\r\n\r\n\r\n\r\n  \r\n  const handleOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    \r\n      <AddTodoButton onClick={handleOpenModal}>Yeni To-do</AddTodoButton>\r\n\r\n      <Modal isOpen={modalOpen} onClose={handleCloseModal}>\r\n        <ModalTitle>Yeni To-do</ModalTitle>\r\n\r\n        <ModalInput\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Yeni To-do\"\r\n          value={newTodo.title}\r\n          maxLength={30}\r\n          onChange={changeHandler}\r\n        />\r\n\r\n\r\n      <AddTodoButton onClick={addNewTodo}>\r\n          {isLoading ? (\r\n            <BarLoader\r\n            color=\"#fff\"\r\n            height={5}\r\n            speedMultiplier={2}\r\n            width={40}\r\n          />\r\n          ) : (\r\n            'Ekle'\r\n          )}\r\n        </AddTodoButton>\r\n\r\n\r\n        \r\n\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n",{"ruleId":"112","severity":1,"message":"113","line":5,"column":10,"nodeType":"114","messageId":"115","endLine":5,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":5,"column":23,"nodeType":"114","messageId":"115","endLine":5,"endColumn":34},{"ruleId":"112","severity":1,"message":"117","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":13},{"ruleId":"112","severity":1,"message":"118","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":36},{"ruleId":"112","severity":1,"message":"119","line":20,"column":8,"nodeType":"114","messageId":"115","endLine":20,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":48,"column":13,"nodeType":"122","endLine":48,"endColumn":117},{"ruleId":"112","severity":1,"message":"123","line":60,"column":9,"nodeType":"114","messageId":"115","endLine":60,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":90,"column":6,"nodeType":"126","endLine":92,"endColumn":4,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":36},{"ruleId":"112","severity":1,"message":"129","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":17},"@typescript-eslint/no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'axios' is defined but never used.","'InternalAxiosRequestConfig' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useAddTaskMutationMutation' is defined but never used.","'addTask' is defined but never used.",{"desc":"131","fix":"132"},"Update the dependencies array to be: [user]",{"range":"133","text":"134"},[1583,1595],"[user]"]