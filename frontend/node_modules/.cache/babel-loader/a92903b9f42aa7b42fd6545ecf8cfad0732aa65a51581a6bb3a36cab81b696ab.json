{"ast":null,"code":"import axios from 'axios';\nconst baseURL = process.env.BASE_URL || 'http://localhost:5000';\nconst instance = axios.create({\n  baseURL: baseURL\n});\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default instance;","map":{"version":3,"names":["axios","baseURL","process","env","BASE_URL","instance","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/api/axiosInstance.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseURL = process.env.BASE_URL || 'http://localhost:5000';\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseURL,\r\n});\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAI,uBAAuB;AAE/D,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC5BL,OAAO,EAAEA;AACX,CAAC,CAAC;AAEFI,QAAQ,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}