{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\MERN-todo-case-project\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetTodosQuery } from '../api/todosApi';\nimport NewTodo from '../components/Todo';\nimport styled from 'styled-components';\nimport SyncLoader from 'react-spinners/SyncLoader';\nimport { setTodos } from '../redux/slices/todoSlice';\nimport { useDeleteTodoMutationMutation } from '../api/todosApi';\nimport { deleteTodo } from '../redux/slices/todoSlice';\nimport { useBeforeUnload } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  width: 100%;\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 20px;\n  height: 100%;\n  min-height: 100vh;\n  min-width: 320px;\n\n\n  @media (min-width: 1024px) and (max-width: 1439px)) {\n    grid-template-columns: repeat(3, 1fr);\n    gap: 20px;\n  \n    justify-items: center; \n  }\n\n  @media (min-width: 768px) and (max-width: 1023px)) {\n    grid-template-columns: repeat(2, 1fr);\n   \n    justify-items: center; \n  }\n\n  @media (max-width: 767px) {\n    grid-template-columns: repeat(1, 1fr);\n    justify-items: center; \n  }\n\n  @media (max-width: 320px) {\n    grid-template-columns: repeat(1, 1fr);\n    justify-items: center;\n  }\n\n  @media (min-width: 1441px) {\n    grid-template-columns: repeat(5, 1fr);\n    gap: 20px;\n    justify-items: center;\n  }\n\n\n`;\n_c = DashboardContainer;\nconst TodoWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 40px;\n\n\n  @media (min-width: 1024px) and (max-width: 1439px) {\n    grid-template-columns: repeat(3, 1fr);\n    \n  }\n\n  @media (min-width: 768px) and (max-width: 1023px) {\n    grid-template-columns: repeat(2, 1fr);\n\n    \n  }\n\n  @media (max-width: 767px) {\n    grid-template-columns: repeat(1, 1fr);\n\n  }\n\n  @media (max-width: 320px) {\n    grid-template-columns: repeat(1, 1fr);\n\n  }\n\n  @media (min-width: 1441px) {\n    grid-template-columns: repeat(5, 1fr);\n    gap: 20px;\n  }\n\n`;\n_c2 = TodoWrapper;\nconst Dashboard = () => {\n  _s();\n  const token = localStorage.getItem('token');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    data: todos,\n    error,\n    isLoading,\n    isSuccess\n  } = useGetTodosQuery();\n  const todosState = useSelector(state => state.todos.todos);\n  useBeforeUnload(React.useCallback(() => {\n    alert;\n  }, [todosState]));\n  const [deleteTodoMutation] = useDeleteTodoMutationMutation();\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(setTodos(todos.myTodos));\n    }\n  }, [dispatch, isSuccess, todos]);\n  useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  }, [token, navigate]);\n  if (!token) {\n    return null;\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(SyncLoader, {\n        color: \"#3B82F6\",\n        size: \"15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred, please refresh the page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this);\n  }\n  const handleDeleteTodo = async todoId => {\n    try {\n      await deleteTodoMutation({\n        todoId\n      });\n      dispatch(deleteTodo({\n        todoId: todoId\n      }));\n      dispatch(setTodos(todosState.filter(todo => todo._id !== todoId)));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: todosState.length > 0 ? /*#__PURE__*/_jsxDEV(TodoWrapper, {\n      children: todosState.map(todo => /*#__PURE__*/_jsxDEV(NewTodo, {\n        todo: todo,\n        onDelete: handleDeleteTodo\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No todos found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eAo8yNkfXkTI4vb/j1SG74p/Gd8=\", false, function () {\n  return [useDispatch, useNavigate, useGetTodosQuery, useSelector, useBeforeUnload, useDeleteTodoMutationMutation];\n});\n_c3 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"TodoWrapper\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useNavigate","useGetTodosQuery","NewTodo","styled","SyncLoader","setTodos","useDeleteTodoMutationMutation","deleteTodo","useBeforeUnload","jsxDEV","_jsxDEV","DashboardContainer","div","_c","TodoWrapper","_c2","Dashboard","_s","token","localStorage","getItem","dispatch","navigate","data","todos","error","isLoading","isSuccess","todosState","state","useCallback","alert","deleteTodoMutation","myTodos","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","handleDeleteTodo","todoId","filter","todo","_id","err","console","log","length","map","onDelete","_c3","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useGetTodosQuery } from '../api/todosApi';\r\nimport { Todo } from '../types/Todo';\r\nimport NewTodo from '../components/Todo';\r\nimport styled from 'styled-components';\r\nimport SyncLoader from 'react-spinners/SyncLoader';\r\nimport { setTodos } from '../redux/slices/todoSlice';\r\nimport AddTask from '../components/AddTask';\r\nimport { useDeleteTodoMutationMutation } from '../api/todosApi';\r\nimport { deleteTodo } from '../redux/slices/todoSlice';\r\nimport { useBeforeUnload } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst DashboardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  width: 100%;\r\n  max-width: 1440px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  height: 100%;\r\n  min-height: 100vh;\r\n  min-width: 320px;\r\n\r\n\r\n  @media (min-width: 1024px) and (max-width: 1439px)) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n  \r\n    justify-items: center; \r\n  }\r\n\r\n  @media (min-width: 768px) and (max-width: 1023px)) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n   \r\n    justify-items: center; \r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    justify-items: center; \r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n    justify-items: center;\r\n  }\r\n\r\n  @media (min-width: 1441px) {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n    justify-items: center;\r\n  }\r\n\r\n\r\n`;\r\n\r\nconst TodoWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 40px;\r\n\r\n\r\n  @media (min-width: 1024px) and (max-width: 1439px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    \r\n  }\r\n\r\n  @media (min-width: 768px) and (max-width: 1023px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n\r\n    \r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n\r\n  }\r\n\r\n  @media (max-width: 320px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n\r\n  }\r\n\r\n  @media (min-width: 1441px) {\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 20px;\r\n  }\r\n\r\n`;\r\n\r\nconst Dashboard = () => {\r\n  const token = localStorage.getItem('token');\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { data: todos, error, isLoading, isSuccess } = useGetTodosQuery();\r\n  const todosState = useSelector((state: any) => state.todos.todos);\r\n\r\n\r\n  useBeforeUnload(React.useCallback\r\n    (() => {\r\n\r\n      alert\r\n\r\n    }, [todosState]));\r\n\r\n\r\n\r\n  const [deleteTodoMutation\r\n  ] = useDeleteTodoMutationMutation();\r\n\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(setTodos(todos.myTodos));\r\n    }\r\n  }, [dispatch, isSuccess, todos]);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/login');\r\n    }\r\n  }, [token, navigate]);\r\n\r\n  if (!token) {\r\n    return null;\r\n  }\r\n\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <SyncLoader color=\"#3B82F6\" size=\"15\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <div>An error occurred, please refresh the page</div>;\r\n  }\r\n\r\n    const handleDeleteTodo = async(todoId: string) => {\r\n\r\n    try {\r\n       await deleteTodoMutation({todoId})\r\n\r\n        dispatch(deleteTodo({\r\n          todoId: todoId\r\n        }))\r\n        dispatch(setTodos(todosState.filter((todo: Todo) => todo._id !== todoId)));\r\n  \r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n    }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      \r\n      {todosState.length > 0 ? (\r\n        <TodoWrapper>\r\n          {todosState.map((todo: Todo) => (\r\n            <NewTodo key={todo._id} todo={todo} onDelete = {handleDeleteTodo} />\r\n          ))}\r\n        </TodoWrapper>\r\n      ) : (\r\n        <p>No todos found</p>\r\n      )}\r\n       \r\n   \r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}