{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taha\\\\Desktop\\\\MERN-todo-case-project\\\\frontend\\\\src\\\\components\\\\AddTask.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTask = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  const openModal = () => {\n    setModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(motion.button, {\n      onClick: () => modalOpen ? closeModal() : openModal(),\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.9\n      },\n      className: \"addTaskButton\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      initial: false,\n      mode: \"wait\",\n      onExitComplete: () => null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTask, \"CMfkJY0oHKX43wkRh7WkxSiVV1E=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useState","motion","AnimatePresence","jsxDEV","_jsxDEV","AddTask","_s","modalOpen","setModalOpen","closeModal","openModal","children","button","onClick","whileHover","scale","whileTap","className","fileName","_jsxFileName","lineNumber","columnNumber","initial","mode","onExitComplete","_c","$RefreshReg$"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/components/AddTask.tsx"],"sourcesContent":["import {useState,useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport {Task} from '../types/Task'\r\nimport {motion, AnimatePresence} from 'framer-motion'\r\nimport Modal from './AddTaskModal'\r\n\r\n\r\nconst AddTask = () => {\r\n\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    const closeModal = () => {\r\n        setModalOpen(false)\r\n    }\r\n\r\n    const openModal = () => {\r\n        setModalOpen(true)\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <motion.button \r\n            onClick={() => (modalOpen ? closeModal() : openModal())}\r\n            whileHover={{scale:1.1}}\r\n            whileTap={{scale:0.9}}\r\n            className = \"addTaskButton\"\r\n            >\r\n                Add Task\r\n            </motion.button>\r\n            <AnimatePresence\r\n                initial={false}\r\n                mode = \"wait\"\r\n                onExitComplete={() => null}\r\n\r\n\r\n            >\r\n          \r\n\r\n            </AnimatePresence>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AddTask"],"mappings":";;AAAA,SAAQA,QAAQ,QAAiB,OAAO;AAGxC,SAAQC,MAAM,EAAEC,eAAe,QAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIrD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBD,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACpBF,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAGD,oBACIJ,OAAA;IAAAO,QAAA,gBACIP,OAAA,CAACH,MAAM,CAACW,MAAM;MACdC,OAAO,EAAEA,CAAA,KAAON,SAAS,GAAGE,UAAU,CAAC,CAAC,GAAGC,SAAS,CAAC,CAAG;MACxDI,UAAU,EAAE;QAACC,KAAK,EAAC;MAAG,CAAE;MACxBC,QAAQ,EAAE;QAACD,KAAK,EAAC;MAAG,CAAE;MACtBE,SAAS,EAAG,eAAe;MAAAN,QAAA,EAC1B;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAChBjB,OAAA,CAACF,eAAe;MACZoB,OAAO,EAAE,KAAM;MACfC,IAAI,EAAG,MAAM;MACbC,cAAc,EAAEA,CAAA,KAAM;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAGd,CAAC;AAAAf,EAAA,CArCKD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAwCb,eAAeA,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}