{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';export var todosApi=createApi({reducerPath:'todosApi',baseQuery:fetchBaseQuery({baseUrl:'http://localhost:5000/',prepareHeaders:function prepareHeaders(headers){var token=localStorage.getItem('token');if(token){headers.set('authorization',\"Bearer \".concat(token));}return headers;}}),endpoints:function endpoints(builder){return{getTodos:builder.query({query:function query(){return'get-todos';}}),deleteTodoMutation:builder.mutation({query:function query(_ref){var todoId=_ref.todoId;return{url:\"delete-todo/\".concat(todoId),method:'DELETE'};}}),deleteTask:builder.mutation({query:function query(_ref2){var todoId=_ref2.todoId,taskId=_ref2.taskId;return{url:\"delete-task/todo/\".concat(todoId,\"/task/\").concat(taskId),method:'DELETE'};}}),createTodo:builder.mutation({query:function query(newTodo){return{url:'add-todo',method:'POST',body:newTodo};}}),updateTaskStatus:builder.mutation({query:function query(_ref3){var todo=_ref3.todo,taskId=_ref3.taskId,completed=_ref3.completed;return{url:\"update-task-status/todo/\".concat(todo,\"/task/\").concat(taskId),method:'PUT',body:{completed:completed}};}}),updateTodoTitle:builder.mutation({query:function query(_ref4){var todoId=_ref4.todoId,newTitle=_ref4.newTitle;return{url:\"update-todo-title/\".concat(todoId),method:'PUT',body:{newTitle:newTitle}};}}),addTaskMutation:builder.mutation({query:function query(_ref5){var todoId=_ref5.todoId,text=_ref5.text;return{url:\"add-task/\".concat(todoId),method:'PUT',body:{text:text}};}})};}});var useGetTodosQuery=todosApi.useGetTodosQuery,useCreateTodoMutation=todosApi.useCreateTodoMutation,useUpdateTaskStatusMutation=todosApi.useUpdateTaskStatusMutation,useUpdateTodoTitleMutation=todosApi.useUpdateTodoTitleMutation,useAddTaskMutationMutation=todosApi.useAddTaskMutationMutation,useDeleteTaskMutation=todosApi.useDeleteTaskMutation,useDeleteTodoMutationMutation=todosApi.useDeleteTodoMutationMutation;export{useGetTodosQuery,useCreateTodoMutation,useUpdateTaskStatusMutation,useUpdateTodoTitleMutation,useAddTaskMutationMutation,useDeleteTaskMutation,useDeleteTodoMutationMutation};","map":{"version":3,"names":["createApi","fetchBaseQuery","todosApi","reducerPath","baseQuery","baseUrl","prepareHeaders","headers","token","localStorage","getItem","set","concat","endpoints","builder","getTodos","query","deleteTodoMutation","mutation","_ref","todoId","url","method","deleteTask","_ref2","taskId","createTodo","newTodo","body","updateTaskStatus","_ref3","todo","completed","updateTodoTitle","_ref4","newTitle","addTaskMutation","_ref5","text","useGetTodosQuery","useCreateTodoMutation","useUpdateTaskStatusMutation","useUpdateTodoTitleMutation","useAddTaskMutationMutation","useDeleteTaskMutation","useDeleteTodoMutationMutation"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/api/todosApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport { Todo} from '../types/Todo';\r\n\r\n\r\nexport const todosApi = createApi({\r\n  reducerPath: 'todosApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5000/',\r\n    prepareHeaders: (headers) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            headers.set('authorization', `Bearer ${token}`);\r\n        }\r\n        return headers;\r\n        }\r\n\r\n},\r\n    \r\n  ),\r\n  endpoints: (builder) => ({\r\n    getTodos: builder.query<any, void>({\r\n      query: () => 'get-todos',\r\n\r\n      \r\n    }),\r\n    deleteTodoMutation: builder.mutation<Todo, {todoId:string}>({\r\n        query: ({todoId}) => ({\r\n            url: `delete-todo/${todoId}`,\r\n            method: 'DELETE'\r\n\r\n        })\r\n\r\n\r\n    }),\r\n\r\n    deleteTask: builder.mutation<Todo, {todoId:string, taskId:string}>({\r\n        query: ({todoId, taskId}) => ({\r\n            url: `delete-task/todo/${todoId}/task/${taskId}`,\r\n            method: 'DELETE',\r\n\r\n\r\n        })\r\n    }),\r\n    createTodo: builder.mutation<Todo, Partial<Todo>>({\r\n      query: (newTodo) => ({\r\n        url: 'add-todo',\r\n        method: 'POST',\r\n        body: newTodo,\r\n      }),\r\n    }),\r\n    updateTaskStatus: builder.mutation<Todo, { todo: string, taskId: string, completed:boolean }>({\r\n      query: ({ todo, taskId, completed }) => ({\r\n        url: `update-task-status/todo/${todo}/task/${taskId}`,\r\n        method: 'PUT',\r\n        body : {completed: completed\r\n        \r\n        }\r\n      }),\r\n    }),\r\n    updateTodoTitle: builder.mutation<Todo, { todoId: string, newTitle: string }>({\r\n      query: ({ todoId, newTitle }) => ({\r\n        url: `update-todo-title/${todoId}`,\r\n        method: 'PUT',\r\n        body: { newTitle }, \r\n      }),\r\n    }),\r\n    addTaskMutation: builder.mutation<Todo, { todoId: string, text: string }>({\r\n      query: ({ todoId, text }) => ({\r\n        url: `add-task/${todoId}`,\r\n        method: 'PUT',\r\n        body: {\r\n            text: text\r\n        }\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetTodosQuery, useCreateTodoMutation, useUpdateTaskStatusMutation, useUpdateTodoTitleMutation, useAddTaskMutationMutation, useDeleteTaskMutation, useDeleteTodoMutationMutation } = todosApi;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}