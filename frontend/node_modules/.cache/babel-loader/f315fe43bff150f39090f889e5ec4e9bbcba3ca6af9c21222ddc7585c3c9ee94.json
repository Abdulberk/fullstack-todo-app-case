{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'http://localhost:5000',\n  prepareHeaders: (headers, _ref) => {\n    let {\n      getState\n    } = _ref;\n    const state = getState();\n    const token = state.token; // Güvenli şekilde tokena erişim\n    if (token) {\n      headers.set('authorization', `Bearer ${token}`);\n    }\n    return headers;\n  }\n});\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery,\n  endpoints: builder => ({\n    loginUser: builder.mutation({\n      query: body => ({\n        url: '/login',\n        method: 'POST',\n        body,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n    })\n  })\n});\nexport const {\n  useLoginUserMutation\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseQuery","baseUrl","prepareHeaders","headers","_ref","getState","state","token","set","authApi","reducerPath","endpoints","builder","loginUser","mutation","query","body","url","method","useLoginUserMutation"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/api/authApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport { RootState } from '../redux/store';\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n  baseUrl: 'http://localhost:5000',\r\n  prepareHeaders: (headers, { getState }) => {\r\n    const state = getState() as RootState;\r\n    const token = state.token; // Güvenli şekilde tokena erişim\r\n    if (token) {\r\n      headers.set('authorization', `Bearer ${token}`);\r\n    }\r\n    return headers;\r\n  },\r\n});\r\n\r\nexport interface AuthResponse {\r\n  token: string;\r\n  message: string;\r\n}\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery,\r\n  endpoints: (builder) => ({\r\n    loginUser: builder.mutation<AuthResponse, { email: string; password: string }>({\r\n      query: (body) => ({\r\n        url: '/login',\r\n        method: 'POST',\r\n        body,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useLoginUserMutation } = authApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,MAAMC,SAAS,GAAGD,cAAc,CAAC;EAC/BE,OAAO,EAAE,uBAAuB;EAChCC,cAAc,EAAEA,CAACC,OAAO,EAAAC,IAAA,KAAmB;IAAA,IAAjB;MAAEC;IAAS,CAAC,GAAAD,IAAA;IACpC,MAAME,KAAK,GAAGD,QAAQ,CAAC,CAAc;IACrC,MAAME,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC,CAAC;IAC3B,IAAIA,KAAK,EAAE;MACTJ,OAAO,CAACK,GAAG,CAAC,eAAe,EAAG,UAASD,KAAM,EAAC,CAAC;IACjD;IACA,OAAOJ,OAAO;EAChB;AACF,CAAC,CAAC;AAOF,OAAO,MAAMM,OAAO,GAAGX,SAAS,CAAC;EAC/BY,WAAW,EAAE,SAAS;EACtBV,SAAS;EACTW,SAAS,EAAGC,OAAO,KAAM;IACvBC,SAAS,EAAED,OAAO,CAACE,QAAQ,CAAoD;MAC7EC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdF,IAAI;QACJb,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEgB;AAAqB,CAAC,GAAGV,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}