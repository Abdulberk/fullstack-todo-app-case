{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { todosApi } from '../api/todosApi';\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\nimport todosReducer from './slices/todoSlice';\nexport const store = configureStore({\n  reducer: {\n    [todosApi.reducerPath]: todosApi.reducer,\n    todos: todosReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(todosApi.middleware)\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","todosApi","setupListeners","todosReducer","store","reducer","reducerPath","todos","middleware","getDefaultMiddleware","concat","dispatch"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport {todosApi} from '../api/todosApi';\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\r\nimport todosReducer from './slices/todoSlice';\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [todosApi.reducerPath]: todosApi.reducer,\r\n    todos: todosReducer\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(todosApi.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nsetupListeners(store.dispatch);\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,OAAOC,YAAY,MAAM,oBAAoB;AAG7C,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACP,CAACJ,QAAQ,CAACK,WAAW,GAAGL,QAAQ,CAACI,OAAO;IACxCE,KAAK,EAAEJ;EACT,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACT,QAAQ,CAACO,UAAU;AACrD,CAAC,CAAC;AAIFN,cAAc,CAACE,KAAK,CAACO,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}