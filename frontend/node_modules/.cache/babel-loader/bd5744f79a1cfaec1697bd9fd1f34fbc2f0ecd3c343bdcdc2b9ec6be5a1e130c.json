{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { authApi } from '../api/authApi';\nimport authReducer from './slices/authSlice';\nexport const store = configureStore({\n  reducer: {\n    [authApi.reducerPath]: authApi.reducer,\n    auth: authReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(authApi.middleware)\n});","map":{"version":3,"names":["configureStore","authApi","authReducer","store","reducer","reducerPath","auth","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { authApi } from '../api/authApi';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { AuthState } from './slices/authSlice';\r\nimport  authReducer from './slices/authSlice';\r\n\r\nexport interface RootState {\r\n\r\n  auth: AuthState;\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [authApi.reducerPath]: authApi.reducer,\r\n    auth: authReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(authApi.middleware),\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,OAAO,QAAQ,gBAAgB;AAGxC,OAAQC,WAAW,MAAM,oBAAoB;AAO7C,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACP,CAACH,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACG,OAAO;IACtCE,IAAI,EAAEJ;EACR,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACR,OAAO,CAACM,UAAU;AACxF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}