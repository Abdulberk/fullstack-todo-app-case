{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'http://localhost:5000'\n});\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery,\n  endpoints: builder => ({\n    loginUser: builder.mutation({\n      query: body => ({\n        url: '/login',\n        method: 'POST',\n        body,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n    })\n  })\n});\nexport const {\n  useLoginUserMutation\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseQuery","baseUrl","authApi","reducerPath","endpoints","builder","loginUser","mutation","query","body","url","method","headers","useLoginUserMutation"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/api/authApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport { RootState } from '../redux/store';\r\n\r\nconst baseQuery = fetchBaseQuery({\r\n  baseUrl: 'http://localhost:5000',\r\n  \r\n});\r\n\r\nexport interface AuthResponse {\r\n  token: string | null;\r\n  message: string | null;\r\n}\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery,\r\n  endpoints: (builder) => ({\r\n    loginUser: builder.mutation<AuthResponse, { email: string; password: string }>({\r\n      query: (body) => ({\r\n        url: '/login',\r\n        method: 'POST',\r\n        body,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useLoginUserMutation } = authApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,MAAMC,SAAS,GAAGD,cAAc,CAAC;EAC/BE,OAAO,EAAE;AAEX,CAAC,CAAC;AAOF,OAAO,MAAMC,OAAO,GAAGJ,SAAS,CAAC;EAC/BK,WAAW,EAAE,SAAS;EACtBH,SAAS;EACTI,SAAS,EAAGC,OAAO,KAAM;IACvBC,SAAS,EAAED,OAAO,CAACE,QAAQ,CAAoD;MAC7EC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdF,IAAI;QACJG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAqB,CAAC,GAAGX,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}