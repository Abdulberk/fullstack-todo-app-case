{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { authApi } from '../api/authApi';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nexport const store = configureStore({\n  reducer: {\n    [authApi.reducerPath]: authApi.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(authApi.middleware)\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","authApi","setupListeners","store","reducer","reducerPath","middleware","getDefaultMiddleware","concat","dispatch"],"sources":["C:/Users/Taha/Desktop/MERN-todo-case-project/frontend/src/redux/store.ts"],"sourcesContent":["import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit';\r\nimport { authApi } from '../api/authApi';\r\nimport {setupListeners} from '@reduxjs/toolkit/query';\r\n\r\nexport const store = configureStore({\r\n    \r\n    reducer: {\r\n        [authApi.reducerPath]: authApi.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(authApi.middleware),\r\n\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nsetupListeners(store.dispatch);\r\n\r\n\r\n"],"mappings":"AAAA,SAAQA,cAAc,QAA4B,kBAAkB;AACpE,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAAQC,cAAc,QAAO,wBAAwB;AAErD,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAEhCI,OAAO,EAAE;IACL,CAACH,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACG;EACnC,CAAC;EACDE,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,OAAO,CAACK,UAAU;AAE1F,CAAC,CAAC;AAKFJ,cAAc,CAACC,KAAK,CAACM,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}